apollo.meta： Apollo 配置中心地址。

apollo.cluster： 指定使用某个集群下的配置。

apollo.bootstrap.enabled： 是否开启 Apollo。

apollo.bootstrap.namespaces ： 指定使用哪个 Namespace 的配置，默认 application。

apollo.cacheDir=/opt/data/some-cache-dir：
    为了防止配置中心无法连接等问题，Apollo 会自动将配置本地缓存一份。

apollo.autoUpdateInjectedSpringProperties：
    Spring应用通常会使用 Placeholder 来注入配置，如${someKey:someDefaultValue}，
    冒号前面的是 key，冒号后面的是默认值。如果想关闭 placeholder 在运行时自动更新功能，
    可以设置为 false。

apollo.bootstrap.eagerLoad.enabled ：
    将 Apollo 加载提到初始化日志系统之前，如果设置为 false，那么将打印出 Apollo 的日志信息，
    但是由于打印 Apollo 日志信息需要日志先启动，启动后无法对日志配置进行修改，所以 Apollo
    不能管理应用的日志配置，如果设置为 true，那么 Apollo 可以管理日志的配置，但是不能打印出
     Apollo 的日志信息。


docker 启动apollo shell:

    参数说明：
    SPRING_DATASOURCE_URL: 对应环境ApolloConfigDB的地址
    SPRING_DATASOURCE_USERNAME: 对应环境ApolloConfigDB的用户名
    SPRING_DATASOURCE_PASSWORD: 对应环境ApolloConfigDB的密码

    //Apollo Config Service
    //镜像获取
    docker pull apolloconfig/apollo-configservice:latest
    //执行
    docker run -p 8080:8080 \
        -e SPRING_DATASOURCE_URL="jdbc:mysql://mysql:3306/ApolloConfigDB?characterEncoding=utf8" \
        -e SPRING_DATASOURCE_USERNAME=root -e SPRING_DATASOURCE_PASSWORD=123456 \
        -d -v /tmp/logs:/opt/logs --name apollo-configservice apolloconfig/apollo-configservice:latest

    //Apollo Admin Service
    //镜像获取
    docker pull apolloconfig/apollo-adminservice:latest
    //执行
    docker run -p 8090:8090 \
        -e SPRING_DATASOURCE_URL="jdbc:mysql://mysql:3306/ApolloConfigDB?characterEncoding=utf8" \
        -e SPRING_DATASOURCE_USERNAME=root -e SPRING_DATASOURCE_PASSWORD=123456 \
        -d -v /tmp/logs:/opt/logs --name apollo-adminservice apolloconfig/apollo-adminservice:latest

    //Apollo Portal
    参数说明：

    SPRING_DATASOURCE_URL: 对应环境ApolloPortalDB的地址
    SPRING_DATASOURCE_USERNAME: 对应环境ApolloPortalDB的用户名
    SPRING_DATASOURCE_PASSWORD: 对应环境ApolloPortalDB的密码
    APOLLO_PORTAL_ENVS(可选): 对应ApolloPortalDB中的apollo.portal.envs配置项，如果没有在数据库中配置的话，可以通过此环境参数配置
    DEV_META/PRO_META(可选): 配置对应环境的Meta Service地址，以${ENV}_META命名，需要注意的是如果配置了ApolloPortalDB中的apollo.portal.meta.servers配置，则以apollo.portal.meta.servers中的配置为准
    //镜像获取
    docker pull apolloconfig/apollo-portal:latest
    //执行
    docker run -p 8070:8070 \
        -e SPRING_DATASOURCE_URL="jdbc:mysql://mysql:3306/ApolloPortalDB?characterEncoding=utf8" \
        -e SPRING_DATASOURCE_USERNAME=root -e SPRING_DATASOURCE_PASSWORD=123456 \
        -e APOLLO_PORTAL_ENVS=dev,pro \
        -e DEV_META=http://apollo-configservice:8080 -e PRO_META=http://apollo-configservice:8080 \
        -d -v /tmp/logs:/opt/logs --name apollo-portal apolloconfig/apollo-portal:latest

//查询端口信息
lsof -i:port


